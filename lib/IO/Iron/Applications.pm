use strict;
use warnings;
package IO::Iron::Applications;

# ABSTRACT: a really awesome library

# VERSION: generated by DZP::OurPkgVersion

=head1 SYNOPSIS

	my $object = IO::Iron::Applications->new();

=method method_x

This method does something experimental.

=cut

sub method_x {
for(my $i = 0; $i < 100; $i++) {
	my $name = "Name " . $i . "\n";
	}
}

=method method_y

This method returns a reason.

=head1 SEE ALSO

=for :list
* L<Your::Module>
* L<Your::Package>

1;
